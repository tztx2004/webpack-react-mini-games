/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./WordRelay.jsx":
/*!***********************!*\
  !*** ./WordRelay.jsx ***!
  \***********************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar Component = React.Component;\nvar WordRelay = /*#__PURE__*/function (_Component) {\n  function WordRelay() {\n    var _this;\n    _classCallCheck(this, WordRelay);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, WordRelay, [].concat(args));\n    _defineProperty(_this, \"state\", {\n      text: 'Hello, webpack'\n    });\n    return _this;\n  }\n  _inherits(WordRelay, _Component);\n  return _createClass(WordRelay, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"h1\", null, this.state.text);\n    }\n  }]);\n}(Component);\nmodule.exports = WordRelay;\n\n//# sourceURL=webpack://react-mini-games/./WordRelay.jsx?");

/***/ }),

/***/ "./client.jsx":
/*!********************!*\
  !*** ./client.jsx ***!
  \********************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ReactDom = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\nvar WordRelay = __webpack_require__(/*! ./WordRelay */ \"./WordRelay.jsx\");\nReactDom.render(/*#__PURE__*/React.createElement(WordRelay, null), document.querySelector('#root'));\n\n//# sourceURL=webpack://react-mini-games/./client.jsx?");

/***/ }),

/***/ "./node_modules/react-dom/cjs/react-dom.development.js":
/*!*************************************************************!*\
  !*** ./node_modules/react-dom/cjs/react-dom.development.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("/**\n * @license React\n * react-dom.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n true && function () {\n  function noop() {}\n  function testStringCoercion(value) {\n    return \"\" + value;\n  }\n  function createPortal$1(children, containerInfo, implementation) {\n    var key = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\n    try {\n      testStringCoercion(key);\n      var JSCompiler_inline_result = !1;\n    } catch (e) {\n      JSCompiler_inline_result = !0;\n    }\n    JSCompiler_inline_result && (console.error(\"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\", \"function\" === typeof Symbol && Symbol.toStringTag && key[Symbol.toStringTag] || key.constructor.name || \"Object\"), testStringCoercion(key));\n    return {\n      $$typeof: REACT_PORTAL_TYPE,\n      key: null == key ? null : \"\" + key,\n      children: children,\n      containerInfo: containerInfo,\n      implementation: implementation\n    };\n  }\n  function getCrossOriginStringAs(as, input) {\n    if (\"font\" === as) return \"\";\n    if (\"string\" === typeof input) return \"use-credentials\" === input ? input : \"\";\n  }\n  function getValueDescriptorExpectingObjectForWarning(thing) {\n    return null === thing ? \"`null`\" : void 0 === thing ? \"`undefined`\" : \"\" === thing ? \"an empty string\" : 'something with type \"' + _typeof(thing) + '\"';\n  }\n  function getValueDescriptorExpectingEnumForWarning(thing) {\n    return null === thing ? \"`null`\" : void 0 === thing ? \"`undefined`\" : \"\" === thing ? \"an empty string\" : \"string\" === typeof thing ? JSON.stringify(thing) : \"number\" === typeof thing ? \"`\" + thing + \"`\" : 'something with type \"' + _typeof(thing) + '\"';\n  }\n  function resolveDispatcher() {\n    var dispatcher = ReactSharedInternals.H;\n    null === dispatcher && console.error(\"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)\\n2. You might be breaking the Rules of Hooks\\n3. You might have more than one copy of React in the same app\\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.\");\n    return dispatcher;\n  }\n  \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && \"function\" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());\n  var React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\"),\n    Internals = {\n      d: {\n        f: noop,\n        r: function r() {\n          throw Error(\"Invalid form element. requestFormReset must be passed a form that was rendered by React.\");\n        },\n        D: noop,\n        C: noop,\n        L: noop,\n        m: noop,\n        X: noop,\n        S: noop,\n        M: noop\n      },\n      p: 0,\n      findDOMNode: null\n    },\n    REACT_PORTAL_TYPE = Symbol[\"for\"](\"react.portal\"),\n    ReactSharedInternals = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\n  \"function\" === typeof Map && null != Map.prototype && \"function\" === typeof Map.prototype.forEach && \"function\" === typeof Set && null != Set.prototype && \"function\" === typeof Set.prototype.clear && \"function\" === typeof Set.prototype.forEach || console.error(\"React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\");\n  exports.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = Internals;\n  exports.createPortal = function (children, container) {\n    var key = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\n    if (!container || 1 !== container.nodeType && 9 !== container.nodeType && 11 !== container.nodeType) throw Error(\"Target container is not a DOM element.\");\n    return createPortal$1(children, container, null, key);\n  };\n  exports.flushSync = function (fn) {\n    var previousTransition = ReactSharedInternals.T,\n      previousUpdatePriority = Internals.p;\n    try {\n      if (ReactSharedInternals.T = null, Internals.p = 2, fn) return fn();\n    } finally {\n      ReactSharedInternals.T = previousTransition, Internals.p = previousUpdatePriority, Internals.d.f() && console.error(\"flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.\");\n    }\n  };\n  exports.preconnect = function (href, options) {\n    \"string\" === typeof href && href ? null != options && \"object\" !== _typeof(options) ? console.error(\"ReactDOM.preconnect(): Expected the `options` argument (second) to be an object but encountered %s instead. The only supported option at this time is `crossOrigin` which accepts a string.\", getValueDescriptorExpectingEnumForWarning(options)) : null != options && \"string\" !== typeof options.crossOrigin && console.error(\"ReactDOM.preconnect(): Expected the `crossOrigin` option (second argument) to be a string but encountered %s instead. Try removing this option or passing a string value instead.\", getValueDescriptorExpectingObjectForWarning(options.crossOrigin)) : console.error(\"ReactDOM.preconnect(): Expected the `href` argument (first) to be a non-empty string but encountered %s instead.\", getValueDescriptorExpectingObjectForWarning(href));\n    \"string\" === typeof href && (options ? (options = options.crossOrigin, options = \"string\" === typeof options ? \"use-credentials\" === options ? options : \"\" : void 0) : options = null, Internals.d.C(href, options));\n  };\n  exports.prefetchDNS = function (href) {\n    if (\"string\" !== typeof href || !href) console.error(\"ReactDOM.prefetchDNS(): Expected the `href` argument (first) to be a non-empty string but encountered %s instead.\", getValueDescriptorExpectingObjectForWarning(href));else if (1 < arguments.length) {\n      var options = arguments[1];\n      \"object\" === _typeof(options) && options.hasOwnProperty(\"crossOrigin\") ? console.error(\"ReactDOM.prefetchDNS(): Expected only one argument, `href`, but encountered %s as a second argument instead. This argument is reserved for future options and is currently disallowed. It looks like the you are attempting to set a crossOrigin property for this DNS lookup hint. Browsers do not perform DNS queries using CORS and setting this attribute on the resource hint has no effect. Try calling ReactDOM.prefetchDNS() with just a single string argument, `href`.\", getValueDescriptorExpectingEnumForWarning(options)) : console.error(\"ReactDOM.prefetchDNS(): Expected only one argument, `href`, but encountered %s as a second argument instead. This argument is reserved for future options and is currently disallowed. Try calling ReactDOM.prefetchDNS() with just a single string argument, `href`.\", getValueDescriptorExpectingEnumForWarning(options));\n    }\n    \"string\" === typeof href && Internals.d.D(href);\n  };\n  exports.preinit = function (href, options) {\n    \"string\" === typeof href && href ? null == options || \"object\" !== _typeof(options) ? console.error(\"ReactDOM.preinit(): Expected the `options` argument (second) to be an object with an `as` property describing the type of resource to be preinitialized but encountered %s instead.\", getValueDescriptorExpectingEnumForWarning(options)) : \"style\" !== options.as && \"script\" !== options.as && console.error('ReactDOM.preinit(): Expected the `as` property in the `options` argument (second) to contain a valid value describing the type of resource to be preinitialized but encountered %s instead. Valid values for `as` are \"style\" and \"script\".', getValueDescriptorExpectingEnumForWarning(options.as)) : console.error(\"ReactDOM.preinit(): Expected the `href` argument (first) to be a non-empty string but encountered %s instead.\", getValueDescriptorExpectingObjectForWarning(href));\n    if (\"string\" === typeof href && options && \"string\" === typeof options.as) {\n      var as = options.as,\n        crossOrigin = getCrossOriginStringAs(as, options.crossOrigin),\n        integrity = \"string\" === typeof options.integrity ? options.integrity : void 0,\n        fetchPriority = \"string\" === typeof options.fetchPriority ? options.fetchPriority : void 0;\n      \"style\" === as ? Internals.d.S(href, \"string\" === typeof options.precedence ? options.precedence : void 0, {\n        crossOrigin: crossOrigin,\n        integrity: integrity,\n        fetchPriority: fetchPriority\n      }) : \"script\" === as && Internals.d.X(href, {\n        crossOrigin: crossOrigin,\n        integrity: integrity,\n        fetchPriority: fetchPriority,\n        nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n      });\n    }\n  };\n  exports.preinitModule = function (href, options) {\n    var encountered = \"\";\n    \"string\" === typeof href && href || (encountered += \" The `href` argument encountered was \" + getValueDescriptorExpectingObjectForWarning(href) + \".\");\n    void 0 !== options && \"object\" !== _typeof(options) ? encountered += \" The `options` argument encountered was \" + getValueDescriptorExpectingObjectForWarning(options) + \".\" : options && \"as\" in options && \"script\" !== options.as && (encountered += \" The `as` option encountered was \" + getValueDescriptorExpectingEnumForWarning(options.as) + \".\");\n    if (encountered) console.error(\"ReactDOM.preinitModule(): Expected up to two arguments, a non-empty `href` string and, optionally, an `options` object with a valid `as` property.%s\", encountered);else switch (encountered = options && \"string\" === typeof options.as ? options.as : \"script\", encountered) {\n      case \"script\":\n        break;\n      default:\n        encountered = getValueDescriptorExpectingEnumForWarning(encountered), console.error('ReactDOM.preinitModule(): Currently the only supported \"as\" type for this function is \"script\" but received \"%s\" instead. This warning was generated for `href` \"%s\". In the future other module types will be supported, aligning with the import-attributes proposal. Learn more here: (https://github.com/tc39/proposal-import-attributes)', encountered, href);\n    }\n    if (\"string\" === typeof href) if (\"object\" === _typeof(options) && null !== options) {\n      if (null == options.as || \"script\" === options.as) encountered = getCrossOriginStringAs(options.as, options.crossOrigin), Internals.d.M(href, {\n        crossOrigin: encountered,\n        integrity: \"string\" === typeof options.integrity ? options.integrity : void 0,\n        nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n      });\n    } else null == options && Internals.d.M(href);\n  };\n  exports.preload = function (href, options) {\n    var encountered = \"\";\n    \"string\" === typeof href && href || (encountered += \" The `href` argument encountered was \" + getValueDescriptorExpectingObjectForWarning(href) + \".\");\n    null == options || \"object\" !== _typeof(options) ? encountered += \" The `options` argument encountered was \" + getValueDescriptorExpectingObjectForWarning(options) + \".\" : \"string\" === typeof options.as && options.as || (encountered += \" The `as` option encountered was \" + getValueDescriptorExpectingObjectForWarning(options.as) + \".\");\n    encountered && console.error('ReactDOM.preload(): Expected two arguments, a non-empty `href` string and an `options` object with an `as` property valid for a `<link rel=\"preload\" as=\"...\" />` tag.%s', encountered);\n    if (\"string\" === typeof href && \"object\" === _typeof(options) && null !== options && \"string\" === typeof options.as) {\n      encountered = options.as;\n      var crossOrigin = getCrossOriginStringAs(encountered, options.crossOrigin);\n      Internals.d.L(href, encountered, {\n        crossOrigin: crossOrigin,\n        integrity: \"string\" === typeof options.integrity ? options.integrity : void 0,\n        nonce: \"string\" === typeof options.nonce ? options.nonce : void 0,\n        type: \"string\" === typeof options.type ? options.type : void 0,\n        fetchPriority: \"string\" === typeof options.fetchPriority ? options.fetchPriority : void 0,\n        referrerPolicy: \"string\" === typeof options.referrerPolicy ? options.referrerPolicy : void 0,\n        imageSrcSet: \"string\" === typeof options.imageSrcSet ? options.imageSrcSet : void 0,\n        imageSizes: \"string\" === typeof options.imageSizes ? options.imageSizes : void 0,\n        media: \"string\" === typeof options.media ? options.media : void 0\n      });\n    }\n  };\n  exports.preloadModule = function (href, options) {\n    var encountered = \"\";\n    \"string\" === typeof href && href || (encountered += \" The `href` argument encountered was \" + getValueDescriptorExpectingObjectForWarning(href) + \".\");\n    void 0 !== options && \"object\" !== _typeof(options) ? encountered += \" The `options` argument encountered was \" + getValueDescriptorExpectingObjectForWarning(options) + \".\" : options && \"as\" in options && \"string\" !== typeof options.as && (encountered += \" The `as` option encountered was \" + getValueDescriptorExpectingObjectForWarning(options.as) + \".\");\n    encountered && console.error('ReactDOM.preloadModule(): Expected two arguments, a non-empty `href` string and, optionally, an `options` object with an `as` property valid for a `<link rel=\"modulepreload\" as=\"...\" />` tag.%s', encountered);\n    \"string\" === typeof href && (options ? (encountered = getCrossOriginStringAs(options.as, options.crossOrigin), Internals.d.m(href, {\n      as: \"string\" === typeof options.as && \"script\" !== options.as ? options.as : void 0,\n      crossOrigin: encountered,\n      integrity: \"string\" === typeof options.integrity ? options.integrity : void 0\n    })) : Internals.d.m(href));\n  };\n  exports.requestFormReset = function (form) {\n    Internals.d.r(form);\n  };\n  exports.unstable_batchedUpdates = function (fn, a) {\n    return fn(a);\n  };\n  exports.useFormState = function (action, initialState, permalink) {\n    return resolveDispatcher().useFormState(action, initialState, permalink);\n  };\n  exports.useFormStatus = function () {\n    return resolveDispatcher().useHostTransitionStatus();\n  };\n  exports.version = \"19.0.0\";\n  \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && \"function\" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());\n}();\n\n//# sourceURL=webpack://react-mini-games/./node_modules/react-dom/cjs/react-dom.development.js?");

/***/ }),

/***/ "./node_modules/react-dom/index.js":
/*!*****************************************!*\
  !*** ./node_modules/react-dom/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {\n    return;\n  }\n  if (true) {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-dom.development.js */ \"./node_modules/react-dom/cjs/react-dom.development.js\");\n}\n\n//# sourceURL=webpack://react-mini-games/./node_modules/react-dom/index.js?");

/***/ }),

/***/ "./node_modules/react/cjs/react.development.js":
/*!*****************************************************!*\
  !*** ./node_modules/react/cjs/react.development.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n/**\n * @license React\n * react.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n true && function () {\n  function defineDeprecationWarning(methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function get() {\n        console.warn(\"%s(...) is deprecated in plain JavaScript React classes. %s\", info[0], info[1]);\n      }\n    });\n  }\n  function getIteratorFn(maybeIterable) {\n    if (null === maybeIterable || \"object\" !== _typeof(maybeIterable)) return null;\n    maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[\"@@iterator\"];\n    return \"function\" === typeof maybeIterable ? maybeIterable : null;\n  }\n  function warnNoop(publicInstance, callerName) {\n    publicInstance = (publicInstance = publicInstance.constructor) && (publicInstance.displayName || publicInstance.name) || \"ReactClass\";\n    var warningKey = publicInstance + \".\" + callerName;\n    didWarnStateUpdateForUnmountedComponent[warningKey] || (console.error(\"Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.\", callerName, publicInstance), didWarnStateUpdateForUnmountedComponent[warningKey] = !0);\n  }\n  function Component(props, context, updater) {\n    this.props = props;\n    this.context = context;\n    this.refs = emptyObject;\n    this.updater = updater || ReactNoopUpdateQueue;\n  }\n  function ComponentDummy() {}\n  function PureComponent(props, context, updater) {\n    this.props = props;\n    this.context = context;\n    this.refs = emptyObject;\n    this.updater = updater || ReactNoopUpdateQueue;\n  }\n  function testStringCoercion(value) {\n    return \"\" + value;\n  }\n  function checkKeyStringCoercion(value) {\n    try {\n      testStringCoercion(value);\n      var JSCompiler_inline_result = !1;\n    } catch (e) {\n      JSCompiler_inline_result = !0;\n    }\n    if (JSCompiler_inline_result) {\n      JSCompiler_inline_result = console;\n      var JSCompiler_temp_const = JSCompiler_inline_result.error;\n      var JSCompiler_inline_result$jscomp$0 = \"function\" === typeof Symbol && Symbol.toStringTag && value[Symbol.toStringTag] || value.constructor.name || \"Object\";\n      JSCompiler_temp_const.call(JSCompiler_inline_result, \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\", JSCompiler_inline_result$jscomp$0);\n      return testStringCoercion(value);\n    }\n  }\n  function getComponentNameFromType(type) {\n    if (null == type) return null;\n    if (\"function\" === typeof type) return type.$$typeof === REACT_CLIENT_REFERENCE$2 ? null : type.displayName || type.name || null;\n    if (\"string\" === typeof type) return type;\n    switch (type) {\n      case REACT_FRAGMENT_TYPE:\n        return \"Fragment\";\n      case REACT_PORTAL_TYPE:\n        return \"Portal\";\n      case REACT_PROFILER_TYPE:\n        return \"Profiler\";\n      case REACT_STRICT_MODE_TYPE:\n        return \"StrictMode\";\n      case REACT_SUSPENSE_TYPE:\n        return \"Suspense\";\n      case REACT_SUSPENSE_LIST_TYPE:\n        return \"SuspenseList\";\n    }\n    if (\"object\" === _typeof(type)) switch (\"number\" === typeof type.tag && console.error(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"), type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        return (type.displayName || \"Context\") + \".Provider\";\n      case REACT_CONSUMER_TYPE:\n        return (type._context.displayName || \"Context\") + \".Consumer\";\n      case REACT_FORWARD_REF_TYPE:\n        var innerType = type.render;\n        type = type.displayName;\n        type || (type = innerType.displayName || innerType.name || \"\", type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\");\n        return type;\n      case REACT_MEMO_TYPE:\n        return innerType = type.displayName || null, null !== innerType ? innerType : getComponentNameFromType(type.type) || \"Memo\";\n      case REACT_LAZY_TYPE:\n        innerType = type._payload;\n        type = type._init;\n        try {\n          return getComponentNameFromType(type(innerType));\n        } catch (x) {}\n    }\n    return null;\n  }\n  function isValidElementType(type) {\n    return \"string\" === typeof type || \"function\" === typeof type || type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_OFFSCREEN_TYPE || \"object\" === _typeof(type) && null !== type && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_CONSUMER_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_CLIENT_REFERENCE$1 || void 0 !== type.getModuleId) ? !0 : !1;\n  }\n  function disabledLog() {}\n  function disableLogs() {\n    if (0 === disabledDepth) {\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd;\n      var props = {\n        configurable: !0,\n        enumerable: !0,\n        value: disabledLog,\n        writable: !0\n      };\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n    }\n    disabledDepth++;\n  }\n  function reenableLogs() {\n    disabledDepth--;\n    if (0 === disabledDepth) {\n      var props = {\n        configurable: !0,\n        enumerable: !0,\n        writable: !0\n      };\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n    }\n    0 > disabledDepth && console.error(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\");\n  }\n  function describeBuiltInComponentFrame(name) {\n    if (void 0 === prefix) try {\n      throw Error();\n    } catch (x) {\n      var match = x.stack.trim().match(/\\n( *(at )?)/);\n      prefix = match && match[1] || \"\";\n      suffix = -1 < x.stack.indexOf(\"\\n    at\") ? \" (<anonymous>)\" : -1 < x.stack.indexOf(\"@\") ? \"@unknown:0:0\" : \"\";\n    }\n    return \"\\n\" + prefix + name + suffix;\n  }\n  function describeNativeComponentFrame(fn, construct) {\n    if (!fn || reentry) return \"\";\n    var frame = componentFrameCache.get(fn);\n    if (void 0 !== frame) return frame;\n    reentry = !0;\n    frame = Error.prepareStackTrace;\n    Error.prepareStackTrace = void 0;\n    var previousDispatcher = null;\n    previousDispatcher = ReactSharedInternals.H;\n    ReactSharedInternals.H = null;\n    disableLogs();\n    try {\n      var RunInRootFrame = {\n        DetermineComponentFrameRoot: function DetermineComponentFrameRoot() {\n          try {\n            if (construct) {\n              var Fake = function Fake() {\n                throw Error();\n              };\n              Object.defineProperty(Fake.prototype, \"props\", {\n                set: function set() {\n                  throw Error();\n                }\n              });\n              if (\"object\" === (typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) && Reflect.construct) {\n                try {\n                  Reflect.construct(Fake, []);\n                } catch (x) {\n                  var control = x;\n                }\n                Reflect.construct(fn, [], Fake);\n              } else {\n                try {\n                  Fake.call();\n                } catch (x$0) {\n                  control = x$0;\n                }\n                fn.call(Fake.prototype);\n              }\n            } else {\n              try {\n                throw Error();\n              } catch (x$1) {\n                control = x$1;\n              }\n              (Fake = fn()) && \"function\" === typeof Fake[\"catch\"] && Fake[\"catch\"](function () {});\n            }\n          } catch (sample) {\n            if (sample && control && \"string\" === typeof sample.stack) return [sample.stack, control.stack];\n          }\n          return [null, null];\n        }\n      };\n      RunInRootFrame.DetermineComponentFrameRoot.displayName = \"DetermineComponentFrameRoot\";\n      var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, \"name\");\n      namePropDescriptor && namePropDescriptor.configurable && Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, \"name\", {\n        value: \"DetermineComponentFrameRoot\"\n      });\n      var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n      if (sampleStack && controlStack) {\n        var sampleLines = sampleStack.split(\"\\n\"),\n          controlLines = controlStack.split(\"\\n\");\n        for (_RunInRootFrame$Deter = namePropDescriptor = 0; namePropDescriptor < sampleLines.length && !sampleLines[namePropDescriptor].includes(\"DetermineComponentFrameRoot\");) namePropDescriptor++;\n        for (; _RunInRootFrame$Deter < controlLines.length && !controlLines[_RunInRootFrame$Deter].includes(\"DetermineComponentFrameRoot\");) _RunInRootFrame$Deter++;\n        if (namePropDescriptor === sampleLines.length || _RunInRootFrame$Deter === controlLines.length) for (namePropDescriptor = sampleLines.length - 1, _RunInRootFrame$Deter = controlLines.length - 1; 1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter && sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter];) _RunInRootFrame$Deter--;\n        for (; 1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter; namePropDescriptor--, _RunInRootFrame$Deter--) if (sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter]) {\n          if (1 !== namePropDescriptor || 1 !== _RunInRootFrame$Deter) {\n            do if (namePropDescriptor--, _RunInRootFrame$Deter--, 0 > _RunInRootFrame$Deter || sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter]) {\n              var _frame = \"\\n\" + sampleLines[namePropDescriptor].replace(\" at new \", \" at \");\n              fn.displayName && _frame.includes(\"<anonymous>\") && (_frame = _frame.replace(\"<anonymous>\", fn.displayName));\n              \"function\" === typeof fn && componentFrameCache.set(fn, _frame);\n              return _frame;\n            } while (1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter);\n          }\n          break;\n        }\n      }\n    } finally {\n      reentry = !1, ReactSharedInternals.H = previousDispatcher, reenableLogs(), Error.prepareStackTrace = frame;\n    }\n    sampleLines = (sampleLines = fn ? fn.displayName || fn.name : \"\") ? describeBuiltInComponentFrame(sampleLines) : \"\";\n    \"function\" === typeof fn && componentFrameCache.set(fn, sampleLines);\n    return sampleLines;\n  }\n  function describeUnknownElementTypeFrameInDEV(type) {\n    if (null == type) return \"\";\n    if (\"function\" === typeof type) {\n      var prototype = type.prototype;\n      return describeNativeComponentFrame(type, !(!prototype || !prototype.isReactComponent));\n    }\n    if (\"string\" === typeof type) return describeBuiltInComponentFrame(type);\n    switch (type) {\n      case REACT_SUSPENSE_TYPE:\n        return describeBuiltInComponentFrame(\"Suspense\");\n      case REACT_SUSPENSE_LIST_TYPE:\n        return describeBuiltInComponentFrame(\"SuspenseList\");\n    }\n    if (\"object\" === _typeof(type)) switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return type = describeNativeComponentFrame(type.render, !1), type;\n      case REACT_MEMO_TYPE:\n        return describeUnknownElementTypeFrameInDEV(type.type);\n      case REACT_LAZY_TYPE:\n        prototype = type._payload;\n        type = type._init;\n        try {\n          return describeUnknownElementTypeFrameInDEV(type(prototype));\n        } catch (x) {}\n    }\n    return \"\";\n  }\n  function getOwner() {\n    var dispatcher = ReactSharedInternals.A;\n    return null === dispatcher ? null : dispatcher.getOwner();\n  }\n  function hasValidKey(config) {\n    if (hasOwnProperty.call(config, \"key\")) {\n      var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n      if (getter && getter.isReactWarning) return !1;\n    }\n    return void 0 !== config.key;\n  }\n  function defineKeyPropWarningGetter(props, displayName) {\n    function warnAboutAccessingKey() {\n      specialPropKeyWarningShown || (specialPropKeyWarningShown = !0, console.error(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\", displayName));\n    }\n    warnAboutAccessingKey.isReactWarning = !0;\n    Object.defineProperty(props, \"key\", {\n      get: warnAboutAccessingKey,\n      configurable: !0\n    });\n  }\n  function elementRefGetterWithDeprecationWarning() {\n    var componentName = getComponentNameFromType(this.type);\n    didWarnAboutElementRef[componentName] || (didWarnAboutElementRef[componentName] = !0, console.error(\"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"));\n    componentName = this.props.ref;\n    return void 0 !== componentName ? componentName : null;\n  }\n  function ReactElement(type, key, self, source, owner, props) {\n    self = props.ref;\n    type = {\n      $$typeof: REACT_ELEMENT_TYPE,\n      type: type,\n      key: key,\n      props: props,\n      _owner: owner\n    };\n    null !== (void 0 !== self ? self : null) ? Object.defineProperty(type, \"ref\", {\n      enumerable: !1,\n      get: elementRefGetterWithDeprecationWarning\n    }) : Object.defineProperty(type, \"ref\", {\n      enumerable: !1,\n      value: null\n    });\n    type._store = {};\n    Object.defineProperty(type._store, \"validated\", {\n      configurable: !1,\n      enumerable: !1,\n      writable: !0,\n      value: 0\n    });\n    Object.defineProperty(type, \"_debugInfo\", {\n      configurable: !1,\n      enumerable: !1,\n      writable: !0,\n      value: null\n    });\n    Object.freeze && (Object.freeze(type.props), Object.freeze(type));\n    return type;\n  }\n  function cloneAndReplaceKey(oldElement, newKey) {\n    newKey = ReactElement(oldElement.type, newKey, void 0, void 0, oldElement._owner, oldElement.props);\n    newKey._store.validated = oldElement._store.validated;\n    return newKey;\n  }\n  function validateChildKeys(node, parentType) {\n    if (\"object\" === _typeof(node) && node && node.$$typeof !== REACT_CLIENT_REFERENCE) if (isArrayImpl(node)) for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n      isValidElement(child) && validateExplicitKey(child, parentType);\n    } else if (isValidElement(node)) node._store && (node._store.validated = 1);else if (i = getIteratorFn(node), \"function\" === typeof i && i !== node.entries && (i = i.call(node), i !== node)) for (; !(node = i.next()).done;) isValidElement(node.value) && validateExplicitKey(node.value, parentType);\n  }\n  function isValidElement(object) {\n    return \"object\" === _typeof(object) && null !== object && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n  function validateExplicitKey(element, parentType) {\n    if (element._store && !element._store.validated && null == element.key && (element._store.validated = 1, parentType = getCurrentComponentErrorInfo(parentType), !ownerHasKeyUseWarning[parentType])) {\n      ownerHasKeyUseWarning[parentType] = !0;\n      var childOwner = \"\";\n      element && null != element._owner && element._owner !== getOwner() && (childOwner = null, \"number\" === typeof element._owner.tag ? childOwner = getComponentNameFromType(element._owner.type) : \"string\" === typeof element._owner.name && (childOwner = element._owner.name), childOwner = \" It was passed a child from \" + childOwner + \".\");\n      var prevGetCurrentStack = ReactSharedInternals.getCurrentStack;\n      ReactSharedInternals.getCurrentStack = function () {\n        var stack = describeUnknownElementTypeFrameInDEV(element.type);\n        prevGetCurrentStack && (stack += prevGetCurrentStack() || \"\");\n        return stack;\n      };\n      console.error('Each child in a list should have a unique \"key\" prop.%s%s See https://react.dev/link/warning-keys for more information.', parentType, childOwner);\n      ReactSharedInternals.getCurrentStack = prevGetCurrentStack;\n    }\n  }\n  function getCurrentComponentErrorInfo(parentType) {\n    var info = \"\",\n      owner = getOwner();\n    owner && (owner = getComponentNameFromType(owner.type)) && (info = \"\\n\\nCheck the render method of `\" + owner + \"`.\");\n    info || (parentType = getComponentNameFromType(parentType)) && (info = \"\\n\\nCheck the top-level render call using <\" + parentType + \">.\");\n    return info;\n  }\n  function escape(key) {\n    var escaperLookup = {\n      \"=\": \"=0\",\n      \":\": \"=2\"\n    };\n    return \"$\" + key.replace(/[=:]/g, function (match) {\n      return escaperLookup[match];\n    });\n  }\n  function getElementKey(element, index) {\n    return \"object\" === _typeof(element) && null !== element && null != element.key ? (checkKeyStringCoercion(element.key), escape(\"\" + element.key)) : index.toString(36);\n  }\n  function noop$1() {}\n  function resolveThenable(thenable) {\n    switch (thenable.status) {\n      case \"fulfilled\":\n        return thenable.value;\n      case \"rejected\":\n        throw thenable.reason;\n      default:\n        switch (\"string\" === typeof thenable.status ? thenable.then(noop$1, noop$1) : (thenable.status = \"pending\", thenable.then(function (fulfilledValue) {\n          \"pending\" === thenable.status && (thenable.status = \"fulfilled\", thenable.value = fulfilledValue);\n        }, function (error) {\n          \"pending\" === thenable.status && (thenable.status = \"rejected\", thenable.reason = error);\n        })), thenable.status) {\n          case \"fulfilled\":\n            return thenable.value;\n          case \"rejected\":\n            throw thenable.reason;\n        }\n    }\n    throw thenable;\n  }\n  function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n    var type = _typeof(children);\n    if (\"undefined\" === type || \"boolean\" === type) children = null;\n    var invokeCallback = !1;\n    if (null === children) invokeCallback = !0;else switch (type) {\n      case \"bigint\":\n      case \"string\":\n      case \"number\":\n        invokeCallback = !0;\n        break;\n      case \"object\":\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = !0;\n            break;\n          case REACT_LAZY_TYPE:\n            return invokeCallback = children._init, mapIntoArray(invokeCallback(children._payload), array, escapedPrefix, nameSoFar, callback);\n        }\n    }\n    if (invokeCallback) {\n      invokeCallback = children;\n      callback = callback(invokeCallback);\n      var childKey = \"\" === nameSoFar ? \".\" + getElementKey(invokeCallback, 0) : nameSoFar;\n      isArrayImpl(callback) ? (escapedPrefix = \"\", null != childKey && (escapedPrefix = childKey.replace(userProvidedKeyEscapeRegex, \"$&/\") + \"/\"), mapIntoArray(callback, array, escapedPrefix, \"\", function (c) {\n        return c;\n      })) : null != callback && (isValidElement(callback) && (null != callback.key && (invokeCallback && invokeCallback.key === callback.key || checkKeyStringCoercion(callback.key)), escapedPrefix = cloneAndReplaceKey(callback, escapedPrefix + (null == callback.key || invokeCallback && invokeCallback.key === callback.key ? \"\" : (\"\" + callback.key).replace(userProvidedKeyEscapeRegex, \"$&/\") + \"/\") + childKey), \"\" !== nameSoFar && null != invokeCallback && isValidElement(invokeCallback) && null == invokeCallback.key && invokeCallback._store && !invokeCallback._store.validated && (escapedPrefix._store.validated = 2), callback = escapedPrefix), array.push(callback));\n      return 1;\n    }\n    invokeCallback = 0;\n    childKey = \"\" === nameSoFar ? \".\" : nameSoFar + \":\";\n    if (isArrayImpl(children)) for (var i = 0; i < children.length; i++) nameSoFar = children[i], type = childKey + getElementKey(nameSoFar, i), invokeCallback += mapIntoArray(nameSoFar, array, escapedPrefix, type, callback);else if (i = getIteratorFn(children), \"function\" === typeof i) for (i === children.entries && (didWarnAboutMaps || console.warn(\"Using Maps as children is not supported. Use an array of keyed ReactElements instead.\"), didWarnAboutMaps = !0), children = i.call(children), i = 0; !(nameSoFar = children.next()).done;) nameSoFar = nameSoFar.value, type = childKey + getElementKey(nameSoFar, i++), invokeCallback += mapIntoArray(nameSoFar, array, escapedPrefix, type, callback);else if (\"object\" === type) {\n      if (\"function\" === typeof children.then) return mapIntoArray(resolveThenable(children), array, escapedPrefix, nameSoFar, callback);\n      array = String(children);\n      throw Error(\"Objects are not valid as a React child (found: \" + (\"[object Object]\" === array ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\" : array) + \"). If you meant to render a collection of children, use an array instead.\");\n    }\n    return invokeCallback;\n  }\n  function mapChildren(children, func, context) {\n    if (null == children) return children;\n    var result = [],\n      count = 0;\n    mapIntoArray(children, result, \"\", \"\", function (child) {\n      return func.call(context, child, count++);\n    });\n    return result;\n  }\n  function lazyInitializer(payload) {\n    if (-1 === payload._status) {\n      var ctor = payload._result;\n      ctor = ctor();\n      ctor.then(function (moduleObject) {\n        if (0 === payload._status || -1 === payload._status) payload._status = 1, payload._result = moduleObject;\n      }, function (error) {\n        if (0 === payload._status || -1 === payload._status) payload._status = 2, payload._result = error;\n      });\n      -1 === payload._status && (payload._status = 0, payload._result = ctor);\n    }\n    if (1 === payload._status) return ctor = payload._result, void 0 === ctor && console.error(\"lazy: Expected the result of a dynamic import() call. Instead received: %s\\n\\nYour code should look like: \\n  const MyComponent = lazy(() => import('./MyComponent'))\\n\\nDid you accidentally put curly braces around the import?\", ctor), \"default\" in ctor || console.error(\"lazy: Expected the result of a dynamic import() call. Instead received: %s\\n\\nYour code should look like: \\n  const MyComponent = lazy(() => import('./MyComponent'))\", ctor), ctor[\"default\"];\n    throw payload._result;\n  }\n  function resolveDispatcher() {\n    var dispatcher = ReactSharedInternals.H;\n    null === dispatcher && console.error(\"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)\\n2. You might be breaking the Rules of Hooks\\n3. You might have more than one copy of React in the same app\\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.\");\n    return dispatcher;\n  }\n  function noop() {}\n  function enqueueTask(task) {\n    if (null === enqueueTaskImpl) try {\n      var requireString = (\"require\" + Math.random()).slice(0, 7);\n      enqueueTaskImpl = (module && module[requireString]).call(module, \"timers\").setImmediate;\n    } catch (_err) {\n      enqueueTaskImpl = function enqueueTaskImpl(callback) {\n        !1 === didWarnAboutMessageChannel && (didWarnAboutMessageChannel = !0, \"undefined\" === typeof MessageChannel && console.error(\"This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning.\"));\n        var channel = new MessageChannel();\n        channel.port1.onmessage = callback;\n        channel.port2.postMessage(void 0);\n      };\n    }\n    return enqueueTaskImpl(task);\n  }\n  function aggregateErrors(errors) {\n    return 1 < errors.length && \"function\" === typeof AggregateError ? new AggregateError(errors) : errors[0];\n  }\n  function popActScope(prevActQueue, prevActScopeDepth) {\n    prevActScopeDepth !== actScopeDepth - 1 && console.error(\"You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. \");\n    actScopeDepth = prevActScopeDepth;\n  }\n  function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {\n    var queue = ReactSharedInternals.actQueue;\n    if (null !== queue) if (0 !== queue.length) try {\n      flushActQueue(queue);\n      enqueueTask(function () {\n        return recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n      });\n      return;\n    } catch (error) {\n      ReactSharedInternals.thrownErrors.push(error);\n    } else ReactSharedInternals.actQueue = null;\n    0 < ReactSharedInternals.thrownErrors.length ? (queue = aggregateErrors(ReactSharedInternals.thrownErrors), ReactSharedInternals.thrownErrors.length = 0, reject(queue)) : resolve(returnValue);\n  }\n  function flushActQueue(queue) {\n    if (!isFlushing) {\n      isFlushing = !0;\n      var i = 0;\n      try {\n        for (; i < queue.length; i++) {\n          var callback = queue[i];\n          do {\n            ReactSharedInternals.didUsePromise = !1;\n            var continuation = callback(!1);\n            if (null !== continuation) {\n              if (ReactSharedInternals.didUsePromise) {\n                queue[i] = callback;\n                queue.splice(0, i);\n                return;\n              }\n              callback = continuation;\n            } else break;\n          } while (1);\n        }\n        queue.length = 0;\n      } catch (error) {\n        queue.splice(0, i + 1), ReactSharedInternals.thrownErrors.push(error);\n      } finally {\n        isFlushing = !1;\n      }\n    }\n  }\n  \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && \"function\" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());\n  var REACT_ELEMENT_TYPE = Symbol[\"for\"](\"react.transitional.element\"),\n    REACT_PORTAL_TYPE = Symbol[\"for\"](\"react.portal\"),\n    REACT_FRAGMENT_TYPE = Symbol[\"for\"](\"react.fragment\"),\n    REACT_STRICT_MODE_TYPE = Symbol[\"for\"](\"react.strict_mode\"),\n    REACT_PROFILER_TYPE = Symbol[\"for\"](\"react.profiler\");\n  Symbol[\"for\"](\"react.provider\");\n  var REACT_CONSUMER_TYPE = Symbol[\"for\"](\"react.consumer\"),\n    REACT_CONTEXT_TYPE = Symbol[\"for\"](\"react.context\"),\n    REACT_FORWARD_REF_TYPE = Symbol[\"for\"](\"react.forward_ref\"),\n    REACT_SUSPENSE_TYPE = Symbol[\"for\"](\"react.suspense\"),\n    REACT_SUSPENSE_LIST_TYPE = Symbol[\"for\"](\"react.suspense_list\"),\n    REACT_MEMO_TYPE = Symbol[\"for\"](\"react.memo\"),\n    REACT_LAZY_TYPE = Symbol[\"for\"](\"react.lazy\"),\n    REACT_OFFSCREEN_TYPE = Symbol[\"for\"](\"react.offscreen\"),\n    MAYBE_ITERATOR_SYMBOL = Symbol.iterator,\n    didWarnStateUpdateForUnmountedComponent = {},\n    ReactNoopUpdateQueue = {\n      isMounted: function isMounted() {\n        return !1;\n      },\n      enqueueForceUpdate: function enqueueForceUpdate(publicInstance) {\n        warnNoop(publicInstance, \"forceUpdate\");\n      },\n      enqueueReplaceState: function enqueueReplaceState(publicInstance) {\n        warnNoop(publicInstance, \"replaceState\");\n      },\n      enqueueSetState: function enqueueSetState(publicInstance) {\n        warnNoop(publicInstance, \"setState\");\n      }\n    },\n    assign = Object.assign,\n    emptyObject = {};\n  Object.freeze(emptyObject);\n  Component.prototype.isReactComponent = {};\n  Component.prototype.setState = function (partialState, callback) {\n    if (\"object\" !== _typeof(partialState) && \"function\" !== typeof partialState && null != partialState) throw Error(\"takes an object of state variables to update or a function which returns an object of state variables.\");\n    this.updater.enqueueSetState(this, partialState, callback, \"setState\");\n  };\n  Component.prototype.forceUpdate = function (callback) {\n    this.updater.enqueueForceUpdate(this, callback, \"forceUpdate\");\n  };\n  var deprecatedAPIs = {\n      isMounted: [\"isMounted\", \"Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks.\"],\n      replaceState: [\"replaceState\", \"Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236).\"]\n    },\n    fnName;\n  for (fnName in deprecatedAPIs) deprecatedAPIs.hasOwnProperty(fnName) && defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n  ComponentDummy.prototype = Component.prototype;\n  deprecatedAPIs = PureComponent.prototype = new ComponentDummy();\n  deprecatedAPIs.constructor = PureComponent;\n  assign(deprecatedAPIs, Component.prototype);\n  deprecatedAPIs.isPureReactComponent = !0;\n  var isArrayImpl = Array.isArray,\n    REACT_CLIENT_REFERENCE$2 = Symbol[\"for\"](\"react.client.reference\"),\n    ReactSharedInternals = {\n      H: null,\n      A: null,\n      T: null,\n      S: null,\n      actQueue: null,\n      isBatchingLegacy: !1,\n      didScheduleLegacyUpdate: !1,\n      didUsePromise: !1,\n      thrownErrors: [],\n      getCurrentStack: null\n    },\n    hasOwnProperty = Object.prototype.hasOwnProperty,\n    REACT_CLIENT_REFERENCE$1 = Symbol[\"for\"](\"react.client.reference\"),\n    disabledDepth = 0,\n    prevLog,\n    prevInfo,\n    prevWarn,\n    prevError,\n    prevGroup,\n    prevGroupCollapsed,\n    prevGroupEnd;\n  disabledLog.__reactDisabledLog = !0;\n  var prefix,\n    suffix,\n    reentry = !1;\n  var componentFrameCache = new (\"function\" === typeof WeakMap ? WeakMap : Map)();\n  var REACT_CLIENT_REFERENCE = Symbol[\"for\"](\"react.client.reference\"),\n    specialPropKeyWarningShown,\n    didWarnAboutOldJSXRuntime;\n  var didWarnAboutElementRef = {};\n  var ownerHasKeyUseWarning = {},\n    didWarnAboutMaps = !1,\n    userProvidedKeyEscapeRegex = /\\/+/g,\n    reportGlobalError = \"function\" === typeof reportError ? reportError : function (error) {\n      if (\"object\" === (typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) && \"function\" === typeof window.ErrorEvent) {\n        var event = new window.ErrorEvent(\"error\", {\n          bubbles: !0,\n          cancelable: !0,\n          message: \"object\" === _typeof(error) && null !== error && \"string\" === typeof error.message ? String(error.message) : String(error),\n          error: error\n        });\n        if (!window.dispatchEvent(event)) return;\n      } else if (\"object\" === (typeof process === \"undefined\" ? \"undefined\" : _typeof(process)) && \"function\" === typeof process.emit) {\n        process.emit(\"uncaughtException\", error);\n        return;\n      }\n      console.error(error);\n    },\n    didWarnAboutMessageChannel = !1,\n    enqueueTaskImpl = null,\n    actScopeDepth = 0,\n    didWarnNoAwaitAct = !1,\n    isFlushing = !1,\n    queueSeveralMicrotasks = \"function\" === typeof queueMicrotask ? function (callback) {\n      queueMicrotask(function () {\n        return queueMicrotask(callback);\n      });\n    } : enqueueTask;\n  exports.Children = {\n    map: mapChildren,\n    forEach: function forEach(children, forEachFunc, forEachContext) {\n      mapChildren(children, function () {\n        forEachFunc.apply(this, arguments);\n      }, forEachContext);\n    },\n    count: function count(children) {\n      var n = 0;\n      mapChildren(children, function () {\n        n++;\n      });\n      return n;\n    },\n    toArray: function toArray(children) {\n      return mapChildren(children, function (child) {\n        return child;\n      }) || [];\n    },\n    only: function only(children) {\n      if (!isValidElement(children)) throw Error(\"React.Children.only expected to receive a single React element child.\");\n      return children;\n    }\n  };\n  exports.Component = Component;\n  exports.Fragment = REACT_FRAGMENT_TYPE;\n  exports.Profiler = REACT_PROFILER_TYPE;\n  exports.PureComponent = PureComponent;\n  exports.StrictMode = REACT_STRICT_MODE_TYPE;\n  exports.Suspense = REACT_SUSPENSE_TYPE;\n  exports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = ReactSharedInternals;\n  exports.act = function (callback) {\n    var prevActQueue = ReactSharedInternals.actQueue,\n      prevActScopeDepth = actScopeDepth;\n    actScopeDepth++;\n    var queue = ReactSharedInternals.actQueue = null !== prevActQueue ? prevActQueue : [],\n      didAwaitActCall = !1;\n    try {\n      var result = callback();\n    } catch (error) {\n      ReactSharedInternals.thrownErrors.push(error);\n    }\n    if (0 < ReactSharedInternals.thrownErrors.length) throw popActScope(prevActQueue, prevActScopeDepth), callback = aggregateErrors(ReactSharedInternals.thrownErrors), ReactSharedInternals.thrownErrors.length = 0, callback;\n    if (null !== result && \"object\" === _typeof(result) && \"function\" === typeof result.then) {\n      var thenable = result;\n      queueSeveralMicrotasks(function () {\n        didAwaitActCall || didWarnNoAwaitAct || (didWarnNoAwaitAct = !0, console.error(\"You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);\"));\n      });\n      return {\n        then: function then(resolve, reject) {\n          didAwaitActCall = !0;\n          thenable.then(function (returnValue) {\n            popActScope(prevActQueue, prevActScopeDepth);\n            if (0 === prevActScopeDepth) {\n              try {\n                flushActQueue(queue), enqueueTask(function () {\n                  return recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n                });\n              } catch (error$2) {\n                ReactSharedInternals.thrownErrors.push(error$2);\n              }\n              if (0 < ReactSharedInternals.thrownErrors.length) {\n                var _thrownError = aggregateErrors(ReactSharedInternals.thrownErrors);\n                ReactSharedInternals.thrownErrors.length = 0;\n                reject(_thrownError);\n              }\n            } else resolve(returnValue);\n          }, function (error) {\n            popActScope(prevActQueue, prevActScopeDepth);\n            0 < ReactSharedInternals.thrownErrors.length ? (error = aggregateErrors(ReactSharedInternals.thrownErrors), ReactSharedInternals.thrownErrors.length = 0, reject(error)) : reject(error);\n          });\n        }\n      };\n    }\n    var returnValue$jscomp$0 = result;\n    popActScope(prevActQueue, prevActScopeDepth);\n    0 === prevActScopeDepth && (flushActQueue(queue), 0 !== queue.length && queueSeveralMicrotasks(function () {\n      didAwaitActCall || didWarnNoAwaitAct || (didWarnNoAwaitAct = !0, console.error(\"A component suspended inside an `act` scope, but the `act` call was not awaited. When testing React components that depend on asynchronous data, you must await the result:\\n\\nawait act(() => ...)\"));\n    }), ReactSharedInternals.actQueue = null);\n    if (0 < ReactSharedInternals.thrownErrors.length) throw callback = aggregateErrors(ReactSharedInternals.thrownErrors), ReactSharedInternals.thrownErrors.length = 0, callback;\n    return {\n      then: function then(resolve, reject) {\n        didAwaitActCall = !0;\n        0 === prevActScopeDepth ? (ReactSharedInternals.actQueue = queue, enqueueTask(function () {\n          return recursivelyFlushAsyncActWork(returnValue$jscomp$0, resolve, reject);\n        })) : resolve(returnValue$jscomp$0);\n      }\n    };\n  };\n  exports.cache = function (fn) {\n    return function () {\n      return fn.apply(null, arguments);\n    };\n  };\n  exports.cloneElement = function (element, config, children) {\n    if (null === element || void 0 === element) throw Error(\"The argument must be a React element, but you passed \" + element + \".\");\n    var props = assign({}, element.props),\n      key = element.key,\n      owner = element._owner;\n    if (null != config) {\n      var JSCompiler_inline_result;\n      a: {\n        if (hasOwnProperty.call(config, \"ref\") && (JSCompiler_inline_result = Object.getOwnPropertyDescriptor(config, \"ref\").get) && JSCompiler_inline_result.isReactWarning) {\n          JSCompiler_inline_result = !1;\n          break a;\n        }\n        JSCompiler_inline_result = void 0 !== config.ref;\n      }\n      JSCompiler_inline_result && (owner = getOwner());\n      hasValidKey(config) && (checkKeyStringCoercion(config.key), key = \"\" + config.key);\n      for (propName in config) !hasOwnProperty.call(config, propName) || \"key\" === propName || \"__self\" === propName || \"__source\" === propName || \"ref\" === propName && void 0 === config.ref || (props[propName] = config[propName]);\n    }\n    var propName = arguments.length - 2;\n    if (1 === propName) props.children = children;else if (1 < propName) {\n      JSCompiler_inline_result = Array(propName);\n      for (var i = 0; i < propName; i++) JSCompiler_inline_result[i] = arguments[i + 2];\n      props.children = JSCompiler_inline_result;\n    }\n    props = ReactElement(element.type, key, void 0, void 0, owner, props);\n    for (key = 2; key < arguments.length; key++) validateChildKeys(arguments[key], props.type);\n    return props;\n  };\n  exports.createContext = function (defaultValue) {\n    defaultValue = {\n      $$typeof: REACT_CONTEXT_TYPE,\n      _currentValue: defaultValue,\n      _currentValue2: defaultValue,\n      _threadCount: 0,\n      Provider: null,\n      Consumer: null\n    };\n    defaultValue.Provider = defaultValue;\n    defaultValue.Consumer = {\n      $$typeof: REACT_CONSUMER_TYPE,\n      _context: defaultValue\n    };\n    defaultValue._currentRenderer = null;\n    defaultValue._currentRenderer2 = null;\n    return defaultValue;\n  };\n  exports.createElement = function (type, config, children) {\n    if (isValidElementType(type)) for (var i = 2; i < arguments.length; i++) validateChildKeys(arguments[i], type);else {\n      i = \"\";\n      if (void 0 === type || \"object\" === _typeof(type) && null !== type && 0 === Object.keys(type).length) i += \" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\";\n      if (null === type) var typeString = \"null\";else isArrayImpl(type) ? typeString = \"array\" : void 0 !== type && type.$$typeof === REACT_ELEMENT_TYPE ? (typeString = \"<\" + (getComponentNameFromType(type.type) || \"Unknown\") + \" />\", i = \" Did you accidentally export a JSX literal instead of a component?\") : typeString = _typeof(type);\n      console.error(\"React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\", typeString, i);\n    }\n    var propName;\n    i = {};\n    typeString = null;\n    if (null != config) for (propName in didWarnAboutOldJSXRuntime || !(\"__self\" in config) || \"key\" in config || (didWarnAboutOldJSXRuntime = !0, console.warn(\"Your app (or one of its dependencies) is using an outdated JSX transform. Update to the modern JSX transform for faster performance: https://react.dev/link/new-jsx-transform\")), hasValidKey(config) && (checkKeyStringCoercion(config.key), typeString = \"\" + config.key), config) hasOwnProperty.call(config, propName) && \"key\" !== propName && \"__self\" !== propName && \"__source\" !== propName && (i[propName] = config[propName]);\n    var childrenLength = arguments.length - 2;\n    if (1 === childrenLength) i.children = children;else if (1 < childrenLength) {\n      for (var childArray = Array(childrenLength), _i = 0; _i < childrenLength; _i++) childArray[_i] = arguments[_i + 2];\n      Object.freeze && Object.freeze(childArray);\n      i.children = childArray;\n    }\n    if (type && type.defaultProps) for (propName in childrenLength = type.defaultProps, childrenLength) void 0 === i[propName] && (i[propName] = childrenLength[propName]);\n    typeString && defineKeyPropWarningGetter(i, \"function\" === typeof type ? type.displayName || type.name || \"Unknown\" : type);\n    return ReactElement(type, typeString, void 0, void 0, getOwner(), i);\n  };\n  exports.createRef = function () {\n    var refObject = {\n      current: null\n    };\n    Object.seal(refObject);\n    return refObject;\n  };\n  exports.forwardRef = function (render) {\n    null != render && render.$$typeof === REACT_MEMO_TYPE ? console.error(\"forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).\") : \"function\" !== typeof render ? console.error(\"forwardRef requires a render function but was given %s.\", null === render ? \"null\" : _typeof(render)) : 0 !== render.length && 2 !== render.length && console.error(\"forwardRef render functions accept exactly two parameters: props and ref. %s\", 1 === render.length ? \"Did you forget to use the ref parameter?\" : \"Any additional parameter will be undefined.\");\n    null != render && null != render.defaultProps && console.error(\"forwardRef render functions do not support defaultProps. Did you accidentally pass a React component?\");\n    var elementType = {\n        $$typeof: REACT_FORWARD_REF_TYPE,\n        render: render\n      },\n      ownName;\n    Object.defineProperty(elementType, \"displayName\", {\n      enumerable: !1,\n      configurable: !0,\n      get: function get() {\n        return ownName;\n      },\n      set: function set(name) {\n        ownName = name;\n        render.name || render.displayName || (Object.defineProperty(render, \"name\", {\n          value: name\n        }), render.displayName = name);\n      }\n    });\n    return elementType;\n  };\n  exports.isValidElement = isValidElement;\n  exports.lazy = function (ctor) {\n    return {\n      $$typeof: REACT_LAZY_TYPE,\n      _payload: {\n        _status: -1,\n        _result: ctor\n      },\n      _init: lazyInitializer\n    };\n  };\n  exports.memo = function (type, compare) {\n    isValidElementType(type) || console.error(\"memo: The first argument must be a component. Instead received: %s\", null === type ? \"null\" : _typeof(type));\n    compare = {\n      $$typeof: REACT_MEMO_TYPE,\n      type: type,\n      compare: void 0 === compare ? null : compare\n    };\n    var ownName;\n    Object.defineProperty(compare, \"displayName\", {\n      enumerable: !1,\n      configurable: !0,\n      get: function get() {\n        return ownName;\n      },\n      set: function set(name) {\n        ownName = name;\n        type.name || type.displayName || (Object.defineProperty(type, \"name\", {\n          value: name\n        }), type.displayName = name);\n      }\n    });\n    return compare;\n  };\n  exports.startTransition = function (scope) {\n    var prevTransition = ReactSharedInternals.T,\n      currentTransition = {};\n    ReactSharedInternals.T = currentTransition;\n    currentTransition._updatedFibers = new Set();\n    try {\n      var returnValue = scope(),\n        onStartTransitionFinish = ReactSharedInternals.S;\n      null !== onStartTransitionFinish && onStartTransitionFinish(currentTransition, returnValue);\n      \"object\" === _typeof(returnValue) && null !== returnValue && \"function\" === typeof returnValue.then && returnValue.then(noop, reportGlobalError);\n    } catch (error) {\n      reportGlobalError(error);\n    } finally {\n      null === prevTransition && currentTransition._updatedFibers && (scope = currentTransition._updatedFibers.size, currentTransition._updatedFibers.clear(), 10 < scope && console.warn(\"Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.\")), ReactSharedInternals.T = prevTransition;\n    }\n  };\n  exports.unstable_useCacheRefresh = function () {\n    return resolveDispatcher().useCacheRefresh();\n  };\n  exports.use = function (usable) {\n    return resolveDispatcher().use(usable);\n  };\n  exports.useActionState = function (action, initialState, permalink) {\n    return resolveDispatcher().useActionState(action, initialState, permalink);\n  };\n  exports.useCallback = function (callback, deps) {\n    return resolveDispatcher().useCallback(callback, deps);\n  };\n  exports.useContext = function (Context) {\n    var dispatcher = resolveDispatcher();\n    Context.$$typeof === REACT_CONSUMER_TYPE && console.error(\"Calling useContext(Context.Consumer) is not supported and will cause bugs. Did you mean to call useContext(Context) instead?\");\n    return dispatcher.useContext(Context);\n  };\n  exports.useDebugValue = function (value, formatterFn) {\n    return resolveDispatcher().useDebugValue(value, formatterFn);\n  };\n  exports.useDeferredValue = function (value, initialValue) {\n    return resolveDispatcher().useDeferredValue(value, initialValue);\n  };\n  exports.useEffect = function (create, deps) {\n    return resolveDispatcher().useEffect(create, deps);\n  };\n  exports.useId = function () {\n    return resolveDispatcher().useId();\n  };\n  exports.useImperativeHandle = function (ref, create, deps) {\n    return resolveDispatcher().useImperativeHandle(ref, create, deps);\n  };\n  exports.useInsertionEffect = function (create, deps) {\n    return resolveDispatcher().useInsertionEffect(create, deps);\n  };\n  exports.useLayoutEffect = function (create, deps) {\n    return resolveDispatcher().useLayoutEffect(create, deps);\n  };\n  exports.useMemo = function (create, deps) {\n    return resolveDispatcher().useMemo(create, deps);\n  };\n  exports.useOptimistic = function (passthrough, reducer) {\n    return resolveDispatcher().useOptimistic(passthrough, reducer);\n  };\n  exports.useReducer = function (reducer, initialArg, init) {\n    return resolveDispatcher().useReducer(reducer, initialArg, init);\n  };\n  exports.useRef = function (initialValue) {\n    return resolveDispatcher().useRef(initialValue);\n  };\n  exports.useState = function (initialState) {\n    return resolveDispatcher().useState(initialState);\n  };\n  exports.useSyncExternalStore = function (subscribe, getSnapshot, getServerSnapshot) {\n    return resolveDispatcher().useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  };\n  exports.useTransition = function () {\n    return resolveDispatcher().useTransition();\n  };\n  exports.version = \"19.0.0\";\n  \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && \"function\" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());\n}();\n\n//# sourceURL=webpack://react-mini-games/./node_modules/react/cjs/react.development.js?");

/***/ }),

/***/ "./node_modules/react/index.js":
/*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react.development.js */ \"./node_modules/react/cjs/react.development.js\");\n}\n\n//# sourceURL=webpack://react-mini-games/./node_modules/react/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./client.jsx");
/******/ 	
/******/ })()
;